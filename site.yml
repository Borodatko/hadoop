- name: Preparing hosts
  become: true
  hosts: all
  vars:
    ansible_python_interpreter: /usr/bin/python3.9
  tags:
    - preinstall
  tasks:

  - name: Set timezone
    community.general.timezone:
      name: Europe/Moscow

  - name: Edit /etc/profile
    blockinfile:
      path: /etc/profile
      block: |
        shopt -s histappend
        export HISTSIZE=10000
        export HISTTIMEFORMAT="%h %d %H:%M:%S "
        PROMPT_COMMAND='history -a'
        export HISTIGNORE="ls:ll:history:w:htop:pwd"

  - name: Update repository && upgrade packages
    ansible.builtin.apt:
      name: "*"
      state: latest
      update_cache: yes

  - name: Install packages
    ansible.builtin.apt:
      name:
        - nano
        - sysstat
        - mlocate
        - net-tools
        - bind-utils
        - tcpdump
        - curl
        - wget
        - tar
        - zip
        - unzip
        - default-jdk
        - default-jre

  - name: Copy hosts file
    ansible.builtin.template:
      src: files/hosts.j2
      dest: /etc/hosts

  - name: Rename Hostnames
    ansible.builtin.hostname:
      name: "{{ inventory_hostname }}"


- name: SSH configuration
  become: true
  hosts: all
  vars:
    ansible_python_interpreter: /usr/bin/python3.9
  tags:
    - ssh
  tasks:

  - name: Add Hadoop user
    ansible.builtin.user:
      name: hadoop
      shell: /bin/bash
      password: $6$16tqq6yLf84JVQBb$K7B911P/4.xyvzPBlMVvfYnXDKKXEF6IPUKL3T4C4J4mgzvft2ZBTe74yqwWbyJ649QzVpbgKEWnkX.PC8h9k.
      generate_ssh_key: yes
      ssh_key_bits: 2048
      ssh_key_file: .ssh/id_rsa

  - name: Get public key from primary node
    ansible.builtin.fetch:
      src: /home/hadoop/.ssh/id_rsa.pub
      dest: /tmp/id_rsa.pub
      flat: yes
    when: inventory_hostname == "node01"

  - name: Put public key to nodes
    ansible.builtin.copy:
      src: /tmp/id_rsa.pub
      dest: /home/hadoop/.ssh/authorized_keys


- name: Hadoop installation
  hosts: all
  vars:
    ansible_python_interpreter: /usr/bin/python3.9
  tags:
    - hadoop_install
  tasks:

  - name: Download & extract archive
    become: true
    ansible.builtin.unarchive:
      src: https://dlcdn.apache.org/hadoop/common/hadoop-{{ hadoop_version }}/hadoop-{{ hadoop_version }}.tar.gz
      dest: /usr/local/hadoop
      remote_src: yes
      mode: '755'
      owner: hadoop
      group: hadoop

  - name: Create logs directory
    become: true
    ansible.builtin.file:
      path: /usr/local/hadoop/logs
      state: directory
      mode: '755'
      owner: hadoop
      group: hadoop

  - name: Edit hadoop bash profile
    become: true
    become_user: hadoop
    ansible.builtin.blockinfile:
      path: /home/hadoop/.bashrc
      block: |
        export HADOOP_HOME=/usr/local/hadoop
        export HADOOP_INSTALL=$HADOOP_HOME
        export HADOOP_MAPRED_HOME=$HADOOP_HOME
        export HADOOP_COMMON_HOME=$HADOOP_HOME
        export HADOOP_HDFS_HOME=$HADOOP_HOME
        export YARN_HOME=$HADOOP_HOME
        export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native
        export PATH=$PATH:$HADOOP_HOME/sbin:$HADOOP_HOME/bin
        export HADOOP_OPTS="-Djava.library.path=$HADOOP_HOME/lib/native"


- name: Hadoop configuration
  hosts: all
  vars:
    ansible_python_interpreter: /usr/bin/python3.9
  tags:
    - hadoop_config
  tasks:

  - name: Create directories
    ansible.builtin.file:
      path: "/hadoop/hdfs/{{ item }}"
      state: directory
      mode: '0755'
      owner: hadoop
      group: hadoop
    with_items:
      - namenode
      - datanode

  - name: Edit hadoop-env.sh
    ansible.builtin.lineinfile:
      dest: /usr/local/hadoop/etc/hadoop/hadoop-env.sh
      line: {{ item }}
    with_items:
      - export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
      - export HADOOP_CLASSPATH+=" $HADOOP_HOME/lib/*.jar"

  - name: Download activation file
    ansible.builtin.get_url:
      url: https://jcenter.bintray.com/javax/activation/javax.activation-api/{{ activation_version }}/javax.activation-api-{{ activation_version }}.jar
      dest: /usr/local/hadoop/lib/

  - name: Copy xml files
    ansible.builtin.template:
      src: {{ item }}
      dest: /usr/local/hadoop/etc/hadoop/
    with_items:
      - core-site.xml.j2
      - hdfs-site.xml.j2
      - mapred-site.xml.j2
      - yarn-site.xml.j2

  - name: Edit number of workers
    ansible.builtin.blockinfile:
      path: /usr/local/hadoop/etc/hadoop/workers
      block: |
        node02
        node03


- name: Systemd configuration
  become: true
  hosts: primary
  vars:
    ansible_python_interpreter: /usr/bin/python3.9
  tags:
    - systemd
  tasks:

  - name: Copy unit file
    ansible.builtin.template:
      src: hadoop.service.j2
      dest: /etc/systemd/system/hadoop.service

  - name: Start Hadoop
    ansible.builtin.systemd:
      daemon_reload: yes
      name: hadoop.service
      enabled: yes
      state: started


- name: Post install configuration
  become: true
  hosts: all
  vars:
    ansible_python_interpreter: /usr/bin/python3.9
  tags:
    - post_install
  tasks:

  - name: Delete artifacts
    ansible.builtin.file:
      path: /usr/local/hadoop-{{ hadoop_version }}.tar.gz
      state: absent

# Hadoop initial commands
#/usr/local/hadoop/bin/hdfs namenode -format
#/usr/local/hadoop/sbin/start-dfs.sh
#/usr/local/hadoop/sbin/start-yarn.sh
